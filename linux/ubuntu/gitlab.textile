---
layout: post
author: Uli Heller
published: false
title: "GitLab"
date: 2012-11-09 08:31
comments: true
categories: 
- Linux
- Windows
- Ubuntu
- Precise
- Git
---

h1. GitLab

h2. Installation

h3. Vorbereitungen

* Größe der /usr-Partition auf 800MB setzen:
** @sudo lvextend -L+400M /dev/systemvg/usrlv@
** @sudo resize2fs /dev/systemvg/usrlv@
* Größe der /home-Partition auf 450MB setzen:
** @sudo lvextend -L+400M /dev/systemvg/homelv@
** @sudo resize2fs /dev/systemvg/homelv@
* Benutzer GITLAB anlegen:
** @sudo adduser --disabled-login --gecos 'gitlab system' gitlab@
* Sicherstellen: Verbindung in's Internet besteht
** NAT aufsetzen
** /etc/networking/interfaces editieren
** @sudo /etc/init.d/networking restart@
* PIP installieren:
** @sudo apt-get install python-pip@
* ICU installieren:
** @apt-get install libicu-dev@
* YAML installieren:
** @apt-get install libyaml-dev@
* REDIS installieren:
** @apt-get install redis-server@

h3. Basispakete

bc. $ sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev libicu-dev redis-server openssh-server git-core python-dev python-pip libyaml-dev postfix libpq-dev
$ sudo apt-get clean

Bei "postfix" habe ich "keine Konfiguration" angewählt. Für GIT wird die Version 1.8.0-0dp3~precise01 vom DPREPO angezogen.

h3. PostgreSQL

Die in der Online-Anleitung vorgeschlagene Version 9.2 ist für Ubuntu-12.04 nicht verfügbar!

bc. $ sudo apt-get install -y postgresql
$ sudo apt-get install -y postgresql-server-dev-9.1
$ sudo -u postgres psql -d template1 -c "CREATE USER gitlab WITH PASSWORD 'gitlab';"
$ sudo -u postgres psql -d template1 -c "CREATE DATABASE gitlabhq_production;"
$ sudo -u postgres psql -d template1 -c "GRANT ALL PRIVILEGES ON DATABASE gitlabhq_production to gitlab;"
$ sudo -s
$ sudo -u gitlab psql -d gitlabhq_production -U gitlab
gitlabhq_production=> \q

h3. Ruby

bc. $ wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.gz
$ tar xfvz ruby-1.9.3-p194.tar.gz
$ cd ruby-1.9.3-p194
$ ./configure
$ make
$ sudo make install

h3. Gitolite

bc.. # Create user for "git"
$ sudo adduser \
  --system \
  --shell /bin/sh \
  --gecos 'git version control' \
  --group \
  --disabled-password \
  --home /home/git \
  git

# Create user for GitLab: (already done)
$ #sudo adduser --disabled-login --gecos 'gitlab system' gitlab

# Adjust group settings
$ sudo usermod -a -G git gitlab
$ sudo usermod -a -G gitlab git

# Generate key
$ sudo -H -u gitlab ssh-keygen -q -N '' -t rsa -f /home/gitlab/.ssh/id_rsa

# Clone Gitolite
$ sudo -H -u git git clone -b gl-v304 https://github.com/gitlabhq/gitolite.git /home/git/gitolite

# Setup
$ cd /home/git
$ sudo -u git -H mkdir bin
$ sudo -u git sh -c 'echo -e "PATH=\$PATH:/home/git/bin\nexport PATH" >> /home/git/.profile'
$ sudo -u git sh -c 'gitolite/install -ln /home/git/bin'
$ sudo cp /home/gitlab/.ssh/id_rsa.pub /home/git/gitlab.pub
$ sudo chmod 0444 /home/git/gitlab.pub
$ sudo -u git -H sh -c "PATH=/home/git/bin:$PATH; gitolite setup -pk /home/git/gitlab.pub"

# Permissions
$ sudo chmod -R g+rwX /home/git/repositories/
$ sudo chown -R git:git /home/git/repositories/

# Checks
$ sudo -u gitlab -H git clone git@localhost:gitolite-admin.git /tmp/gitolite-admin
$ sudo rm -rf /tmp/gitolite-admin

h3. Install Prerequisites

bc. sudo gem install charlock_holmes --version '0.6.8'
sudo pip install pygments
sudo gem install bundler

h3. Clone GitLab Source

bc. cd /home/gitlab
sudo -H -u gitlab git clone -b stable https://github.com/gitlabhq/gitlabhq.git gitlab
cd gitlab
sudo -u gitlab cp config/gitlab.yml.example config/gitlab.yml

h3. Database auswählen - PostgreSQL

bc. sudo -u gitlab cp config/database.yml.postgresql config/database.yml
sudo -u gitlab jmacs config/database.yml
# set username and password 

h3. Install Gems

bc. sudo -u gitlab -H bundle install --without development test sqlite mysql --deployment

h3. Datenbank

bc. sudo -u gitlab bundle exec rake gitlab:app:setup RAILS_ENV=production

h3. GitLab Hooks

bc. sudo cp ./lib/hooks/post-receive /home/git/.gitolite/hooks/common/post-receive
sudo chown git:git /home/git/.gitolite/hooks/common/post-receive

h3. Anwendungsstatus prüfen

bc. sudo -u gitlab bundle exec rake gitlab:app:status RAILS_ENV=production

Hoffentlich bleibt alles grün/YES.

h3. Web Server starten

bc. sudo -u gitlab bundle exec rails s -e production

Browser: http://192.168.56.84:3000

* Email: admin@local.host
* Password: 5iveL!fe

Funktioniert!

h2. Tests

h3. Benutzer

* admin - admin@admin.de - admin1111 ... Administrator
* uli - uli@uli.de - uli1111 ... "normaler" Benutzer
* fat - fat@fat.de - fat1111 ... Benutzer aus der FAT-Gruppe
* fat2 - fat2@fat.de - fat21111 ... Zweiter Benutzer aus der FAT-Gruppe
* po - po@po.de - po1111 ... ProductOwner


h3. Zugriffsrechte


h2. Probleme

h3. Offene Probleme

h4. Falsche Links

Anzeige nach Anlage eines Projektes, bspw. bei "Existing Repo?":

bc. cd existing_git_repo
git remote add origin git@localhost:puppet.git
git push -u origin master

h4. Push/Pull via HTTP scheint nicht funktionieren

bc. uli@uli-hp:/tmp/puppet$ git pull
Username for 'http://192.168.56.84:3000': fat
Password for 'http://fat@192.168.56.84:3000': 
fatal: Authentication failed

h4. Dokumentenformat TEXTILE wird nicht richtig formatiert

TBD

h3. Erledigte Probleme

h4. YAML

bc. $ gem list
/usr/local/lib/ruby/1.9.1/yaml.rb:56:in `<top (required)>':
It seems your ruby installation is missing psych (for YAML output).
To eliminate this warning, please install libyaml and reinstall your ruby.

Lösungsversuch mit libyaml-dev:

* @sudo apt-get install libyaml-dev@
* @cd ~/ruby*@
* @./configure@
* @make@
* @sudo make install@
* @gem list@

Die Fehlermeldung bzgl. YAML erscheint nicht mehr.

* @cd /home/gitlab/gitlab@
* @sudo -u gitlab bundle exec rails s -e production@

... funktioniert.

h4. Ruby-1.9.3-p327

bc. $ wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p327.tar.gz
$ tar xfvz ruby-1.9.3-p327.tar.gz
$ cd ruby-1.9.3-p327
$ ./configure
$ make
$ sudo make install

... funktioniert. GitLab funktioniert ebenfalls.

h4. Git-Warnung bzgl. 'push-default'

bc.. $ cd /home/gitlab/gitlab/
$ sudo -u gitlab bundle exec rake gitlab:app:setup RAILS_ENV=production
...
 nothing to commit, working directory clean
warning: 'push.default' ist nicht gesetzt; der implizit gesetzte Wert
wird in Git 2.0 von 'matching' nach 'simple' geändert. Um diese Meldung zu
unterdrücken und das aktuelle Verhalten nach Änderung des Standardwertes
beizubehalten, benutze:
  git config --global push.default matching

Um diese Meldung zu unterdrücken und das neue Verhalten jetzt zu übernehmen,
benutze:

  git config --global push.default simple

Führe 'git help config' aus und suche nach 'push.default' für weitere Informationen.
(Der Modus 'simple' wurde in Git 1.7.11 eingeführt. Benutze den ähnlichen Modus 'current' anstatt 'simple', falls du gelegentlich ältere Versionen von Git benutzt.)

Everything up-to-date

p. Korrekturversuch mit:

* @sudo -u gitlab -H git config --global push.default simple@

Nachtest - OK, Fehlermeldung erscheint nicht mehr.

h4. Probleme beim Start von PostgreSQL

bc. $ sudo service postgresql start
 * Starting PostgreSQL 9.1 database server
 * The PostgreSQL server failed to start. Please check the log output:
                                                                         [fail]

Sichtung der Datei /var/log/postgresql/postgresql-9.1-main.log: Keinerlei Einträge.

Im Nachhinein stellt sich heraus, dass die Partition /var vollgelaufen war. Also: Am besten zunächst mit @df -h@ kontrollieren, ob noch genügend Plattenplatz frei ist! Wahrscheinlich reicht beim Vollaufen ein einfaches Vergrößern der vollen Parition aus.

Hier der Ablauf, mit dem ich's ursprl. wieder an's Fliegen gebracht habe.

Deinstallieren mit:

* @dpkg --get-selections "*postg*" |cut -f1|sudo xargs apt-get purge -y@

Danach neu installieren mit:

* @sudo apt-get install -y postgresql@

Die Installation bricht ab mit einem Fehler: "No space left on device". Also: Partition /var" um 200MB vergrößern und neu testen, damit geht's dann.

* @sudo apt-get install -y postgresql-server-dev-9.1@

Nun die Datenbank anlegen mit:

bc. $ sudo -u postgres psql -d template1 -c "CREATE USER gitlab WITH PASSWORD 'gitlab';"
$ sudo -u postgres psql -d template1 -c "CREATE DATABASE gitlabhq_production;"
$ sudo -u postgres psql -d template1 -c "GRANT ALL PRIVILEGES ON DATABASE gitlabhq_production to gitlab;"
$ cd /home/gitlab/gitlab
$ sudo -u gitlab bundle exec rake gitlab:app:setup RAILS_ENV=production
